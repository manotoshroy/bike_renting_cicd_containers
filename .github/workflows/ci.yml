# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CI Pipeline for bike renting app

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

#permissions:
  #contents: read

jobs:
  train:
    runs-on: ubuntu-latest
    #strategy:
      #fail-fast: false # I don't think we need to explicitly assign false
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd bike_renting_model
        pip install -r requirements/requirements.txt
        if [ -f requirements/requirements.txt ]; then pip install -r requirements/requirements.txt; fi
        #working-directory: bike_renting_model
    - name: Train the model and save the model
      run: |
        cd bike_renting_model
        python model/train_pipeline.py
    - uses: actions/upload-artifact@v4
      with:
        name: my-trained-pipeline
        path: bike_renting_model/model/trained_models/*.pkl
        retention-days: 1
  test:
    runs-on: ubuntu-latest
    needs: train
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        #pip install -r requirements/test_requirements.txt
        cd bike_renting_model
        if [ -f requirements/test_requirements.txt ]; then pip install -r requirements/test_requirements.txt; fi
        #working-directory: bike_renting_model
    - uses: actions/download-artifact@v4
      with:
        name: my-trained-pipeline
        path: bike_renting_model/model/trained_models
    - name: Test the model with pytest
      run: pytest

  build:
    needs: [train, test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: '3.12'
    - uses: actions/download-artifact@v4
      with:
        name: my-trained-pipeline
        path: bike_renting_model/model/trained_models
    - name: Install Build Dependencies
      run: pip install --upgrade build
    - name: Build the model
      run: |
        cd bike_renting_model
        python -m build
    - uses: actions/upload-artifact@v4
      with:
        name: bike-renting-model-package
        path: dist/*.whl
        retention-days: 1
        
  push-image:
    needs: [train, test, build]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout of the repo
      uses: actions/checkout@v2
    - uses: actions/download-artifact@v4
      with:
        name: bike-renting-model-package
        path: bike_renting_model_api
    
    - name: Docker login
      env:
        DOCKER_USER: ${{secrets.DOCKERHUB_USERNAME}}
        DOCKER_PASSWORD: ${{secrets.DOCKERHUB_PASSWORD}}
      run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      
    - name: Build Docker Image for the API application
      env:
        DOCKER_USER: ${{secrets.DOCKERHUB_USERNAME}}
      run: docker build . -f Dockerfile -t $DOCKER_USER/bike_renting_api:latest
    - name: Push Docker Image 
      env:
        DOCKER_USER: ${{secrets.DOCKERHUB_USERNAME}}
      run: docker push $DOCKER_USER/bike_renting_api
    - name: Logout from Docker
      run: docker logout
